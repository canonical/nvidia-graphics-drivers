From ac8d0d921047ae4d509c415e41076e0c6c78930f Mon Sep 17 00:00:00 2001
From: Alberto Milone <alberto.milone@canonical.com>
Date: Thu, 1 Sep 2022 14:12:18 +0200
Subject: [PATCH 1/1] Add support for Linux 6.0

---
 common/inc/nv-linux.h          |  6 ---
 common/inc/nv-proto.h          |  2 +-
 nvidia-drm/nvidia-drm-helper.c |  5 +++
 nvidia/nv-acpi.c               | 72 ++++++++++------------------------
 nvidia/nv-pci.c                | 10 ++++-
 5 files changed, 34 insertions(+), 61 deletions(-)

diff --git a/common/inc/nv-linux.h b/common/inc/nv-linux.h
index c6328bb..57be1a2 100644
--- a/common/inc/nv-linux.h
+++ b/common/inc/nv-linux.h
@@ -332,16 +332,10 @@ extern int nv_pat_mode;
 #endif
 
 #if defined(NV_LINUX_ACPI_EVENTS_SUPPORTED)
-#if (NV_ACPI_WALK_NAMESPACE_ARGUMENT_COUNT == 6)
-#define NV_ACPI_WALK_NAMESPACE(type, args...) acpi_walk_namespace(type, args)
-#elif (NV_ACPI_WALK_NAMESPACE_ARGUMENT_COUNT == 7)
 #define NV_ACPI_WALK_NAMESPACE(type, start_object, max_depth, \
         user_function, args...) \
     acpi_walk_namespace(type, start_object, max_depth, \
             user_function, NULL, args)
-#else
-#error "NV_ACPI_WALK_NAMESPACE_ARGUMENT_COUNT value unrecognized!"
-#endif
 #endif
 
 #if defined(CONFIG_PREEMPT_RT) || defined(CONFIG_PREEMPT_RT_FULL)
diff --git a/common/inc/nv-proto.h b/common/inc/nv-proto.h
index 92dcc01..ebb2873 100644
--- a/common/inc/nv-proto.h
+++ b/common/inc/nv-proto.h
@@ -93,6 +93,6 @@ NvBool        nv_lock_init_locks(nvidia_stack_t *, nv_state_t *);
 void          nv_lock_destroy_locks(nvidia_stack_t *, nv_state_t *);
 void          nv_linux_add_device_locked(nv_linux_state_t *);
 void          nv_linux_remove_device_locked(nv_linux_state_t *);
-NvBool        nv_acpi_upstreamport_power_resource_method_present(struct pci_dev *);
+NvBool        nv_acpi_power_resource_method_present(struct pci_dev *);
 
 #endif /* _NV_PROTO_H_ */
diff --git a/nvidia-drm/nvidia-drm-helper.c b/nvidia-drm/nvidia-drm-helper.c
index 3831180..af84e85 100644
--- a/nvidia-drm/nvidia-drm-helper.c
+++ b/nvidia-drm/nvidia-drm-helper.c
@@ -31,6 +31,11 @@
 
 #include "nvmisc.h"
 
+#include <linux/version.h>
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
+#include <drm/drm_framebuffer.h>
+#endif
+
 #if defined(NV_DRM_ATOMIC_MODESET_AVAILABLE)
 
 #if defined(NV_DRM_DRMP_H_PRESENT)
diff --git a/nvidia/nv-acpi.c b/nvidia/nv-acpi.c
index f4a256c..96e31fa 100644
--- a/nvidia/nv-acpi.c
+++ b/nvidia/nv-acpi.c
@@ -164,7 +164,6 @@ static void nv_acpi_powersource_hotplug_event(acpi_handle handle, u32 event_type
         if (nv_acpi_get_powersource(&ac_plugged) != NV_OK)
             return;
 
-        // XXX[ljm] AC power is the opposite of battery power :)
         rm_system_event(pNvAcpiObject->sp, NV_SYSTEM_ACPI_BATTERY_POWER_EVENT, !ac_plugged);
     }
 }
@@ -716,12 +715,11 @@ NV_STATUS NV_API_CALL nv_acpi_ddc_method(
 )
 {
     acpi_status status;
-    struct acpi_device *device = NULL;
     union acpi_object *ddc = NULL;
-    struct list_head *node, *next;
     NvU32 i, largestEdidSize;
     acpi_handle dev_handle  = NULL;
     acpi_handle lcd_dev_handle  = NULL;
+    acpi_handle handle = NULL;
 
     if (!nv_acpi_get_device_handle(nv, &dev_handle))
         return NV_ERR_NOT_SUPPORTED;
@@ -729,15 +727,6 @@ NV_STATUS NV_API_CALL nv_acpi_ddc_method(
     if (!dev_handle)
         return NV_ERR_INVALID_ARGUMENT;
 
-#if defined(NV_ACPI_BUS_GET_DEVICE_PRESENT)
-    status = acpi_bus_get_device(dev_handle, &device);
-#else
-    return NV_ERR_NOT_SUPPORTED;
-#endif
-
-    if (ACPI_FAILURE(status) || !device)
-        return NV_ERR_INVALID_ARGUMENT;
-
     if (!NV_MAY_SLEEP())
     {
 #if defined(DEBUG)
@@ -748,16 +737,16 @@ NV_STATUS NV_API_CALL nv_acpi_ddc_method(
         return NV_ERR_NOT_SUPPORTED;
     }
 
-    list_for_each_safe(node, next, &device->children)
+    while (lcd_dev_handle == NULL)
     {
         unsigned long long device_id = 0;
-        struct acpi_device *dev =
-            list_entry(node, struct acpi_device, node);
 
-        if (!dev)
-            continue;
+        status = acpi_get_next_object(ACPI_TYPE_DEVICE, dev_handle,
+                                      handle, &handle);
+        if (ACPI_FAILURE(status) || (handle == NULL))
+            break;
 
-        status = acpi_evaluate_integer(dev->handle, "_ADR", NULL, &device_id);
+        status = acpi_evaluate_integer(handle, "_ADR", NULL, &device_id);
         if (ACPI_FAILURE(status))
             /* Couldnt query device_id for this device */
             continue;
@@ -767,16 +756,13 @@ NV_STATUS NV_API_CALL nv_acpi_ddc_method(
             case 0x0118:
             case 0x0400:
             case 0xA420:
-                lcd_dev_handle = dev->handle;
+                lcd_dev_handle = handle;
                 nv_printf(NV_DBG_INFO, "NVRM: %s Found LCD: %x\n",
                           __FUNCTION__, device_id);
                 break;
             default:
                 break;
         }
-
-        if (lcd_dev_handle != NULL)
-            break;
     }
 
     if (lcd_dev_handle == NULL)
@@ -1057,7 +1043,7 @@ static NV_STATUS  nv_acpi_wmmx_method(
     return NV_OK;
 }
 
-NvBool nv_acpi_upstreamport_power_resource_method_present(
+NvBool nv_acpi_power_resource_method_present(
     struct pci_dev *pdev
 )
 {
@@ -1085,7 +1071,7 @@ NvBool nv_acpi_upstreamport_power_resource_method_present(
     if (!buf.pointer)
     {
        nv_printf(NV_DBG_INFO, "NVRM: output buffer pointer is null"
-                              " for upstream port's _PR3 method\n");
+                              " for _PR3 method\n");
        return NV_FALSE;
     }
 
@@ -1126,15 +1112,14 @@ NV_STATUS NV_API_CALL nv_acpi_mux_method(
 )
 {
     acpi_status status;
-    struct acpi_device *device    = NULL;
     struct acpi_buffer output     = { ACPI_ALLOCATE_BUFFER, NULL };
     union acpi_object *mux        = NULL;
     union acpi_object mux_arg     = { ACPI_TYPE_INTEGER };
     struct acpi_object_list input = { 1, &mux_arg };
     acpi_handle dev_handle        = NULL;
     acpi_handle mux_dev_handle    = NULL;
+    acpi_handle handle            = NULL;
     unsigned long long device_id  = 0;
-    struct list_head *node, *next;
 
     if ((strcmp(pMethodName, "MXDS") != 0)
         && (strcmp(pMethodName, "MXDM") != 0))
@@ -1155,16 +1140,6 @@ NV_STATUS NV_API_CALL nv_acpi_mux_method(
     if (!dev_handle)
         return NV_ERR_INVALID_ARGUMENT;
 
-#if defined(NV_ACPI_BUS_GET_DEVICE_PRESENT)
-    status = acpi_bus_get_device(dev_handle, &device);
-#else
-    return NV_ERR_NOT_SUPPORTED;
-#endif
-
-
-    if (ACPI_FAILURE(status) || !device)
-        return NV_ERR_INVALID_ARGUMENT;
-
     if (!NV_MAY_SLEEP())
     {
 #if defined(DEBUG)
@@ -1173,23 +1148,16 @@ NV_STATUS NV_API_CALL nv_acpi_mux_method(
         return NV_ERR_NOT_SUPPORTED;
     }
 
-    list_for_each_safe(node, next, &device->children)
+    while (mux_dev_handle == NULL)
     {
-        struct acpi_device *dev = list_entry(node, struct acpi_device, node);
-
-        if (!dev)
-            continue;
-
-        status = acpi_evaluate_integer(dev->handle, "_ADR", NULL, &device_id);
-        if (ACPI_FAILURE(status))
-            /* Could not query device_id for this device */
-            continue;
-
-        if (device_id == muxAcpiId)
-        {
-            mux_dev_handle = dev->handle;
+        status = acpi_get_next_object(ACPI_TYPE_DEVICE, dev_handle,
+                                      handle, &handle);
+        if (ACPI_FAILURE(status) || (handle == NULL))
             break;
-        }
+
+        status = acpi_evaluate_integer(handle, "_ADR", NULL, &device_id);
+        if (ACPI_SUCCESS(status) && (device_id == muxAcpiId))
+            mux_dev_handle = handle;
     }
 
     if (mux_dev_handle == NULL)
@@ -1404,7 +1372,7 @@ NV_STATUS NV_API_CALL nv_acpi_dod_method(
     return NV_ERR_NOT_SUPPORTED;
 }
 
-NvBool nv_acpi_upstreamport_power_resource_method_present(
+NvBool nv_acpi_power_resource_method_present(
     struct pci_dev *pdev
 )
 {
diff --git a/nvidia/nv-pci.c b/nvidia/nv-pci.c
index 65a1c14..2e14015 100644
--- a/nvidia/nv-pci.c
+++ b/nvidia/nv-pci.c
@@ -144,9 +144,13 @@ static void nv_init_dynamic_power_management
         }
     }
 
-    if (pci_dev->bus && pci_dev->bus->self)
+    if (nv_get_hypervisor_type() != OS_HYPERVISOR_UNKNOWN)
     {
-        pr3_acpi_method_present = nv_acpi_upstreamport_power_resource_method_present(pci_dev->bus->self);
+        pr3_acpi_method_present = nv_acpi_power_resource_method_present(pci_dev);
+    }
+    else if (pci_dev->bus && pci_dev->bus->self)
+    {
+        pr3_acpi_method_present = nv_acpi_power_resource_method_present(pci_dev->bus->self);
     }
 
     rm_init_dynamic_power_management(sp, nv, pr3_acpi_method_present);
@@ -216,6 +220,8 @@ static void nv_init_dynamic_power_management
 
 
 
+
+
 
 
 
-- 
2.32.0

